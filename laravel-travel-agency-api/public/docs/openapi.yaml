openapi: 3.0.3
info:
  title: 'Travel Agency API'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/v1/admin/travels:
    post:
      summary: 'POST Travel'
      operationId: pOSTTravel
      description: 'Creates a new Travel record.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: '{"data":{"id":"996a36ca-2693-4901-9c55-7136e68d81d5","name":"My new travel 234","slug":"my-new-travel-234", ...}'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The name has already been taken.'
                  errors:
                    name:
                      - 'The name has already been taken.'
                properties:
                  message:
                    type: string
                    example: 'The name has already been taken.'
                  errors:
                    type: object
                    properties:
                      name:
                        type: array
                        example:
                          - 'The name has already been taken.'
                        items:
                          type: string
      tags:
        - 'Admin endpoints'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                is_public:
                  type: boolean
                  description: ''
                  example: false
                name:
                  type: string
                  description: ''
                  example: magni
                description:
                  type: string
                  description: ''
                  example: 'Sit facere velit qui rerum ut qui rem.'
                number_of_days:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 80
              required:
                - name
                - description
                - number_of_days
  '/api/v1/admin/travels/{travel_id}/tours':
    post:
      summary: 'POST Tour'
      operationId: pOSTTour
      description: 'Creates new Tour record.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 9970f432-99a4-4e60-b684-ba613b4b18d2
                    name: Impressive1234!!
                    starting_date: '2023-07-01'
                    ending_date: '2023-08-01'
                    price: '3,000.00'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 9970f432-99a4-4e60-b684-ba613b4b18d2
                      name:
                        type: string
                        example: Impressive1234!!
                      starting_date:
                        type: string
                        example: '2023-07-01'
                      ending_date:
                        type: string
                        example: '2023-08-01'
                      price:
                        type: string
                        example: '3,000.00'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The name has already been taken. (and 2 more errors)'
                  errors:
                    name:
                      - 'The name has already been taken.'
                    description:
                      - 'The description field is required.'
                    number_of_days:
                      - 'The number of days field is required.'
                properties:
                  message:
                    type: string
                    example: 'The name has already been taken. (and 2 more errors)'
                  errors:
                    type: object
                    properties:
                      name:
                        type: array
                        example:
                          - 'The name has already been taken.'
                        items:
                          type: string
                      description:
                        type: array
                        example:
                          - 'The description field is required.'
                        items:
                          type: string
                      number_of_days:
                        type: array
                        example:
                          - 'The number of days field is required.'
                        items:
                          type: string
      tags:
        - 'Admin endpoints'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: explicabo
                starting_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-06-18T16:02:26'
                ending_date:
                  type: string
                  description: 'Must be a valid date. Must be a date after <code>starting_date</code>.'
                  example: '2033-08-25'
                price:
                  type: number
                  description: ''
                  example: 22665.65
              required:
                - name
                - starting_date
                - ending_date
                - price
    parameters:
      -
        in: path
        name: travel_id
        description: 'The ID of the travel.'
        example: 9965e77d-b3b2-488d-8cf4-df1a1363a958
        required: true
        schema:
          type: string
  '/api/v1/admin/travels/{travel_id}':
    put:
      summary: 'PUT Travel'
      operationId: pUTTravel
      description: 'Updates new Travel record.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: '{"data":{"id":"996a36ca-2693-4901-9c55-7136e68d81d5","name":"My new travel 234", ...}'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The name has already been taken.'
                  errors:
                    name:
                      - 'The name has already been taken.'
                properties:
                  message:
                    type: string
                    example: 'The name has already been taken.'
                  errors:
                    type: object
                    properties:
                      name:
                        type: array
                        example:
                          - 'The name has already been taken.'
                        items:
                          type: string
      tags:
        - 'Admin endpoints'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                is_public:
                  type: boolean
                  description: ''
                  example: false
                name:
                  type: string
                  description: ''
                  example: minima
                description:
                  type: string
                  description: ''
                  example: 'Incidunt quia molestiae sit est sint vel.'
                number_of_days:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 53
              required:
                - name
                - description
                - number_of_days
    parameters:
      -
        in: path
        name: travel_id
        description: 'The ID of the travel.'
        example: 9965e77d-b3b2-488d-8cf4-df1a1363a958
        required: true
        schema:
          type: string
  /api/v1/auth/login:
    post:
      summary: 'POST Login'
      operationId: pOSTLogin
      description: 'Login with the existing user.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  access_token: 1|a9ZcYzIrLURVGx6Xe41HKj1CrNsxRxe4pLA2oISo
                properties:
                  access_token:
                    type: string
                    example: 1|a9ZcYzIrLURVGx6Xe41HKj1CrNsxRxe4pLA2oISo
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'The provided credentials are incorrect.'
                properties:
                  error:
                    type: string
                    example: 'The provided credentials are incorrect.'
      tags:
        - 'Auth endpoints'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: alana.frami@example.net
                password:
                  type: string
                  description: ''
                  example: hOLD>m3Fl
              required:
                - email
                - password
      security: []
  /api/v1/travels:
    get:
      summary: 'GET Travels'
      operationId: gETTravels
      description: 'Returns paginated list of travels.'
      parameters:
        -
          in: query
          name: page
          description: 'Page number.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page number.'
            example: 1
        -
          in: query
          name: per_page
          description: 'Show entities per page.'
          example: 10
          required: false
          schema:
            type: integer
            description: 'Show entities per page.'
            example: 10
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: '{"data":[{"id":"9958e389-5edf-48eb-8ecd-e058985cf3ce","name":"First travel", ...}}'
      tags:
        - 'Public endpoints'
      security: []
  '/api/v1/travels/{id}':
    get:
      summary: 'GET Travel'
      operationId: gETTravel
      description: 'Returns single travel.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 9965e77d-c264-4988-b9f5-8a50b08cdd2a
                    slug: molestiae-alias-ab-et-quo-molestiae-reprehenderit-consequatur-consectetur
                    name: Impressive1234
                    description: Description
                    number_of_days: 14
                    number_of_nights: 13
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 9965e77d-c264-4988-b9f5-8a50b08cdd2a
                      slug:
                        type: string
                        example: molestiae-alias-ab-et-quo-molestiae-reprehenderit-consequatur-consectetur
                      name:
                        type: string
                        example: Impressive1234
                      description:
                        type: string
                        example: Description
                      number_of_days:
                        type: integer
                        example: 14
                      number_of_nights:
                        type: integer
                        example: 13
      tags:
        - 'Public endpoints'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the travel.'
        example: 9965e77d-b3b2-488d-8cf4-df1a1363a958
        required: true
        schema:
          type: string
      -
        in: path
        name: travel_uuid
        description: 'Optional parameter. Travel uuid.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '"9965e77d-c264-4988-b9f5-8a50b08cdd2a"'
  '/api/v1/travels/{travel_slug}/tours':
    get:
      summary: 'GET Travel Tours'
      operationId: gETTravelTours
      description: 'Returns paginated list of tours by travel slug.'
      parameters:
        -
          in: query
          name: page
          description: 'Page number.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page number.'
            example: 1
        -
          in: query
          name: per_page
          description: 'Show entities per page.'
          example: 10
          required: false
          schema:
            type: integer
            description: 'Show entities per page.'
            example: 10
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: '{"data":[{"id":"9958e389-5edf-48eb-8ecd-e058985cf3ce","name":"Tour on Sunday","starting_date":"2023-06-11","ending_date":"2023-06-16", ...}'
      tags:
        - 'Public endpoints'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                sortBy:
                  type: string.
                  description: ''
                  example: '"price"'
                sortDirection:
                  type: string
                  description: 'Must be one of <code>asc</code> or <code>desc</code>.'
                  example: asc
                priceFrom:
                  type: number.
                  description: ''
                  example: '"123.45"'
                priceTo:
                  type: number.
                  description: ''
                  example: '"234.56"'
                dateFrom:
                  type: date.
                  description: ''
                  example: '"2023-06-01"'
                dateTo:
                  type: date.
                  description: ''
                  example: '"2023-07-01"'
                sortOrder:
                  type: string.
                  description: ''
                  example: '"asc" or "desc"'
      security: []
    parameters:
      -
        in: path
        name: travel_slug
        description: 'Optional parameter. Travel slug.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '"first-travel"'
tags:
  -
    name: 'Admin endpoints'
    description: ''
  -
    name: 'Auth endpoints'
    description: ''
  -
    name: 'Public endpoints'
    description: ''
